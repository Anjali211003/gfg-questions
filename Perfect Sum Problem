class Solution{

	public:
	int mod=1e9+7;
	int countSubset(int arr[], int n, int sum,vector<vector<int>>&t){
	    if(t[n][sum]!=-1)
	    return t[n][sum];
	    
	    if(n==0 and sum>0)
        return 0;
        
        else if(n==1){
            if(sum==0)
            {
                if(arr[0]==0)
                return 2;
                
                else
                return 1;
            }
            else{
                if(arr[0]==sum)
                return 1;
                
                else
                return 0;
            }
        }
        
        else if(n==0 and sum==0)
        return 1;
        
        int ans=countSubset(arr,n-1,sum,t)%mod;
        
        if(arr[n-1]<=sum){
            ans+=countSubset(arr,n-1,sum-arr[n-1],t);
            ans%=mod;
        }
        return t[n][sum]=ans;
	}
	int perfectSum(int arr[], int n, int sum)
	{
       
       
        vector<vector<int>>t(n+1,vector<int>(sum+1,-1));
        return countSubset(arr,n,sum,t)%mod;
        
}
	  
};
